name: Build and Deploy iOS to TestFlight with flutter only

on:
  workflow_dispatch:
    inputs:
      track:
        description: 'Which track should be used? One of beta, production'
        required: true
        default: 'beta'
        type: choice
        options:
          - beta
          - production

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Install dependencies
        run: flutter pub get

      - name: Create a temporary keychain
        run: |
          security create-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
          security set-keychain-settings -t 3600 -u build.keychain
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: Set up signing certificate
        run: |
          echo "${{ secrets.CERTIFICATE_PRIVATE_KEY }}" | base64 --decode > /tmp/certificate.p12
          sudo security import /tmp/certificate.p12 -P "${{ secrets.CERTIFICATE_PASSWORD }}" -A -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
        env:
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: Set up provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.PROVISIONING_PROFILE }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/$(uuidgen).mobileprovision

      - name: Build iOS app
        run: |
          flutter doctor
          flutter build ipa --release --verbose --disable-analytics --export-method app-store --dart-define="WIREDASH_SECRET=${{ secrets.WIREDASH_SECRET }}"
        env:
          WIREDASH_SECRET: ${{ secrets.WIREDASH_SECRET }}

      - name: Install Fastlane
        run: sudo gem install fastlane

      - name: Upload to TestFlight with Fastlane
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APP_SPECIFIC_PASSWORD: ${{ secrets.APP_SPECIFIC_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }} # Optional, wenn 2FA aktiviert ist
        run: |
          cd ios
          pwd
          fastlane build_ios_app --skip_build_archive "true" --archive_path "../build/ios/archive/Runner.xcarchive"
          fastlane pilot upload --ipa ../build/ios/ipa/deckng.ipa --username "${{ secrets.APPLE_ID }}"