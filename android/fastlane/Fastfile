fastlane_require 'semantic'
fastlane_require 'semantic/core_ext'
fastlane_require 'fileutils'
fastlane_require 'open3'

# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

gradle_file_path = "./app/build.gradle"

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
#   desc "Runs all the tests"
#   lane :test do
#     gradle(task: "test")
#   end
#
#   desc "Submit a new Beta Build to Crashlytics Beta"
#   lane :beta do
#     gradle(task: "clean assembleRelease")
#     crashlytics
#
#     # sh "your_script.sh"
#     # You can also use other beta testing services here
#   end
#
#   desc "Deploy a new version to the Google Play"
#   lane :deploy do
#     gradle(task: "clean assembleRelease")
#     upload_to_play_store
#   end

  lane :release do
    build(track: 'production')
  end

  lane :beta do
    build(track: 'beta')
  end

  lane :build do |options|
#     ensure_git_branch(branch: 'master')
#     sh "cd .. && ionic cap sync android --prod"

    if ENV['GOOGLE_PLAY_JSON_KEY_DATA']
      previous_build_number_beta = google_play_track_version_codes(json_key_data: ENV['GOOGLE_PLAY_JSON_KEY_DATA'], track: "beta")[0]
      previous_build_number_prod = google_play_track_version_codes(json_key_data: ENV['GOOGLE_PLAY_JSON_KEY_DATA'], track: "production")[0]
    else
      previous_build_number_beta = google_play_track_version_codes(json_key: ENV['GOOGLE_PLAY_JSON_KEY_FILE'], track: "beta")[0]
      previous_build_number_prod = google_play_track_version_codes(json_key: ENV['GOOGLE_PLAY_JSON_KEY_FILE'], track: "production")[0]
    end

    previous_build_number = [previous_build_number_beta, previous_build_number_prod].max
    current_build_number = previous_build_number + 1

    android_set_version_code(version_code: current_build_number, gradle_file: gradle_file_path)
#     android_set_version_name(version_name: version, gradle_file: gradle_file_path )
    gradle(task: "clean assembleRelease")
    if ENV['GOOGLE_PLAY_JSON_KEY_DATA']
      upload_to_play_store(json_key_data: ENV['GOOGLE_PLAY_JSON_KEY_DATA'], skip_upload_apk: true, track: options[:track])
    else
      upload_to_play_store(json_key: ENV['GOOGLE_PLAY_JSON_KEY_FILE'], skip_upload_apk: true, track: options[:track])
    end
  end

  lane :snapshots do
      sh "cd .. && ionic cap sync android --prod"
#     gradle(
#           task: 'clean',
#           project_dir: android_project_dir
#      )
    build_android_app(
      task: 'assemble',
      build_type: 'Debug',
    )
    build_android_app(
      task: 'assemble',
      build_type: 'AndroidTest',
    )
    capture_android_screenshots(device_type: 'phone', reinstall_app: true)
  end
end
