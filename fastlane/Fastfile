ios_path = "./ios/App/"
project = ios_path + "App.xcodeproj"
workspace = ios_path + "App.xcworkspace"
gradle_file_path = "./android/app/build.gradle"
scheme = "App"

desc "Push a new beta build to TestFlight"
lane :beta do
  ensure_git_branch(branch: ENV["BRANCH_NAME"])
#   ensure_git_status_clean

  match(type: "appstore", readonly: is_ci)
  latest_testflight_build_number(
     version: File.read('../VERSION'),      # specify specific version number (optional, omitting it increments patch version number)
     xcodeproj: project # (optional, you must specify the path to your main Xcode project if it is not in the project root directory)
   )
  app_version = latest_testflight_build_number(version:ENV["APP_VERSION"], app_identifier:ENV["APP_IDENTIFIER"])
  increment_build_number(xcodeproj: project, build_number: app_version+1)
  identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
  update_app_identifier(xcodeproj: project, plist_path: "App/Info.plist", app_identifier: identifier)
  update_info_plist(xcodeproj: project, plist_path: "App/Info.plist", display_name: ENV["APP_NAME"])
  api_environment = "Release"
  build_app(clean: true, scheme: scheme,workspace: workspace)

  upload_to_testflight(app_identifier: identifier, skip_waiting_for_build_processing:true, itc_provider: "F3C769M2C7")
  clean_build_artifacts
  notification(subtitle: "Finished Building", message: "App uploaded")
end

lane :release do
  increment_version_number(
       version_number: File.read('../VERSION'),      # specify specific version number (optional, omitting it increments patch version number)
       xcodeproj: project # (optional, you must specify the path to your main Xcode project if it is not in the project root directory)
     )
  #capture_screenshots(project: project)                  # generate new screenshots for the App Store
#   sync_code_signing(type: "appstore")# see code signing guide for more information
  match(type: "appstore", readonly: is_ci)
  build_app(clean: true,scheme: scheme, workspace: workspace)
  upload_to_app_store(app_version: File.read('../VERSION'))                # upload your app to App Store Connect
  notification(subtitle: "Finished Building", message: "App uploaded")
end

lane :inc_version do
#ios
 increment_version_number(
   version_number: File.read('../VERSION'),      # specify specific version number (optional, omitting it increments patch version number)
   xcodeproj: project # (optional, you must specify the path to your main Xcode project if it is not in the project root directory)
 )
end

lane :inc_version_android do
 # android
 increment_version_name(
   version_name: File.read("../VERSION")
 )
end

lane :playstore do
  gradle(
    task: 'assemble',
    build_type: 'Release',
    project_dir: "./android"
  )
end

lane :tests_android do
  gradle(task: "test", project_dir: "./android")
end

lane :tests_ios do
  run_tests(scheme: scheme, workspace: workspace)
end

