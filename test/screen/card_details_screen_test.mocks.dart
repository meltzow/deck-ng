// Mocks generated by Mockito 5.4.4 from annotations
// in deck_ng/test/screen/card_details_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i10;

import 'package:deck_ng/controller/card_details_controller.dart' as _i5;
import 'package:deck_ng/model/card.dart' as _i4;
import 'package:flutter/material.dart' as _i3;
import 'package:get/get.dart' as _i2;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:multi_dropdown/models/value_item.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRxBool_0 extends _i1.SmartFake implements _i2.RxBool {
  _FakeRxBool_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxString_1 extends _i1.SmartFake implements _i2.RxString {
  _FakeRxString_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_2 extends _i1.SmartFake
    implements _i3.TextEditingController {
  _FakeTextEditingController_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxList_3<E> extends _i1.SmartFake implements _i2.RxList<E> {
  _FakeRxList_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCard_4 extends _i1.SmartFake implements _i4.Card {
  _FakeCard_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_5<T> extends _i1.SmartFake
    implements _i2.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CardDetailsController].
///
/// See the documentation for Mockito's code generation for more information.
class MockCardDetailsController extends _i1.Mock
    implements _i5.CardDetailsController {
  MockCardDetailsController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RxBool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: _FakeRxBool_0(
          this,
          Invocation.getter(#isLoading),
        ),
      ) as _i2.RxBool);

  @override
  _i2.RxBool get isDescriptionEditing => (super.noSuchMethod(
        Invocation.getter(#isDescriptionEditing),
        returnValue: _FakeRxBool_0(
          this,
          Invocation.getter(#isDescriptionEditing),
        ),
      ) as _i2.RxBool);

  @override
  set isDescriptionEditing(_i2.RxBool? _isDescriptionEditing) =>
      super.noSuchMethod(
        Invocation.setter(
          #isDescriptionEditing,
          _isDescriptionEditing,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get isTitleEditing => (super.noSuchMethod(
        Invocation.getter(#isTitleEditing),
        returnValue: _FakeRxBool_0(
          this,
          Invocation.getter(#isTitleEditing),
        ),
      ) as _i2.RxBool);

  @override
  set isTitleEditing(_i2.RxBool? _isTitleEditing) => super.noSuchMethod(
        Invocation.setter(
          #isTitleEditing,
          _isTitleEditing,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get descriptionControllerText => (super.noSuchMethod(
        Invocation.getter(#descriptionControllerText),
        returnValue: _FakeRxString_1(
          this,
          Invocation.getter(#descriptionControllerText),
        ),
      ) as _i2.RxString);

  @override
  set descriptionControllerText(_i2.RxString? _descriptionControllerText) =>
      super.noSuchMethod(
        Invocation.setter(
          #descriptionControllerText,
          _descriptionControllerText,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxString get titleControllerText => (super.noSuchMethod(
        Invocation.getter(#titleControllerText),
        returnValue: _FakeRxString_1(
          this,
          Invocation.getter(#titleControllerText),
        ),
      ) as _i2.RxString);

  @override
  set titleControllerText(_i2.RxString? _titleControllerText) =>
      super.noSuchMethod(
        Invocation.setter(
          #titleControllerText,
          _titleControllerText,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get dueDateController => (super.noSuchMethod(
        Invocation.getter(#dueDateController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#dueDateController),
        ),
      ) as _i3.TextEditingController);

  @override
  set dueDateController(_i3.TextEditingController? _dueDateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #dueDateController,
          _dueDateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<_i6.ValueItem<int>> get allLabelValueItems => (super.noSuchMethod(
        Invocation.getter(#allLabelValueItems),
        returnValue: _FakeRxList_3<_i6.ValueItem<int>>(
          this,
          Invocation.getter(#allLabelValueItems),
        ),
      ) as _i2.RxList<_i6.ValueItem<int>>);

  @override
  _i4.Card get cardData1 => (super.noSuchMethod(
        Invocation.getter(#cardData1),
        returnValue: _FakeCard_4(
          this,
          Invocation.getter(#cardData1),
        ),
      ) as _i4.Card);

  @override
  String get dueDatePreview => (super.noSuchMethod(
        Invocation.getter(#dueDatePreview),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#dueDatePreview),
        ),
      ) as String);

  @override
  _i3.TextEditingController get titleController => (super.noSuchMethod(
        Invocation.getter(#titleController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#titleController),
        ),
      ) as _i3.TextEditingController);

  @override
  List<_i6.ValueItem<int>> get selectedLabelValueItems => (super.noSuchMethod(
        Invocation.getter(#selectedLabelValueItems),
        returnValue: <_i6.ValueItem<int>>[],
      ) as List<_i6.ValueItem<int>>);

  @override
  List<_i6.ValueItem<String>> get allUsersValueItems => (super.noSuchMethod(
        Invocation.getter(#allUsersValueItems),
        returnValue: <_i6.ValueItem<String>>[],
      ) as List<_i6.ValueItem<String>>);

  @override
  List<_i6.ValueItem<String>> get selectedAssigneesValueItems =>
      (super.noSuchMethod(
        Invocation.getter(#selectedAssigneesValueItems),
        returnValue: <_i6.ValueItem<String>>[],
      ) as List<_i6.ValueItem<String>>);

  @override
  set boardId(_i2.RxInt? boardId) => super.noSuchMethod(
        Invocation.setter(
          #boardId,
          boardId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set stackId(_i2.RxInt? stackId) => super.noSuchMethod(
        Invocation.setter(
          #stackId,
          stackId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set cardId(_i2.RxInt? cardId) => super.noSuchMethod(
        Invocation.setter(
          #cardId,
          cardId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set cardData(_i2.Rx<_i4.Card>? card) => super.noSuchMethod(
        Invocation.setter(
          #cardData,
          card,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void successMsg() => super.noSuchMethod(
        Invocation.method(
          #successMsg,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic saveLabels(List<_i6.ValueItem<int>>? selectedLabels) =>
      super.noSuchMethod(Invocation.method(
        #saveLabels,
        [selectedLabels],
      ));

  @override
  dynamic removeLabel(_i6.ValueItem<int>? selectedLabel) =>
      super.noSuchMethod(Invocation.method(
        #removeLabel,
        [selectedLabel],
      ));

  @override
  void saveUsers(List<_i6.ValueItem<String>>? selectedUsers) =>
      super.noSuchMethod(
        Invocation.method(
          #saveUsers,
          [selectedUsers],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic removeAssignee(_i6.ValueItem<String>? selectedAssignee) =>
      super.noSuchMethod(Invocation.method(
        #removeAssignee,
        [selectedAssignee],
      ));

  @override
  void setDueDate(DateTime? result) => super.noSuchMethod(
        Invocation.method(
          #setDueDate,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Disposer addListener(_i9.GetStateUpdate? listener) => (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i9.Disposer);

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i10.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Disposer addListenerId(
    Object? key,
    _i9.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i9.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}
