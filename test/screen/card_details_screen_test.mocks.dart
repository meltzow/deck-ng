// Mocks generated by Mockito 5.4.4 from annotations
// in deck_ng/test/screen/card_details_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i9;

import 'package:deck_ng/controller/card_details_controller.dart' as _i4;
import 'package:deck_ng/model/models.dart' as _i5;
import 'package:file_picker/file_picker.dart' as _i7;
import 'package:flutter/material.dart' as _i3;
import 'package:get/get.dart' as _i2;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRx_0<T> extends _i1.SmartFake implements _i2.Rx<T> {
  _FakeRx_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxList_1<E> extends _i1.SmartFake implements _i2.RxList<E> {
  _FakeRxList_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_2 extends _i1.SmartFake
    implements _i3.TextEditingController {
  _FakeTextEditingController_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxInt_3 extends _i1.SmartFake implements _i2.RxInt {
  _FakeRxInt_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_4<T> extends _i1.SmartFake
    implements _i2.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CardDetailsController].
///
/// See the documentation for Mockito's code generation for more information.
class MockCardDetailsController extends _i1.Mock
    implements _i4.CardDetailsController {
  MockCardDetailsController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Rx<_i5.Card?> get card => (super.noSuchMethod(
        Invocation.getter(#card),
        returnValue: _FakeRx_0<_i5.Card?>(
          this,
          Invocation.getter(#card),
        ),
      ) as _i2.Rx<_i5.Card?>);

  @override
  set card(_i2.Rx<_i5.Card?>? _card) => super.noSuchMethod(
        Invocation.setter(
          #card,
          _card,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Rx<_i5.Board?> get board => (super.noSuchMethod(
        Invocation.getter(#board),
        returnValue: _FakeRx_0<_i5.Board?>(
          this,
          Invocation.getter(#board),
        ),
      ) as _i2.Rx<_i5.Board?>);

  @override
  set board(_i2.Rx<_i5.Board?>? _board) => super.noSuchMethod(
        Invocation.setter(
          #board,
          _board,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<_i5.User> get users => (super.noSuchMethod(
        Invocation.getter(#users),
        returnValue: _FakeRxList_1<_i5.User>(
          this,
          Invocation.getter(#users),
        ),
      ) as _i2.RxList<_i5.User>);

  @override
  set users(_i2.RxList<_i5.User>? _users) => super.noSuchMethod(
        Invocation.setter(
          #users,
          _users,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<_i5.Attachment> get attachments => (super.noSuchMethod(
        Invocation.getter(#attachments),
        returnValue: _FakeRxList_1<_i5.Attachment>(
          this,
          Invocation.getter(#attachments),
        ),
      ) as _i2.RxList<_i5.Attachment>);

  @override
  set attachments(_i2.RxList<_i5.Attachment>? _attachments) =>
      super.noSuchMethod(
        Invocation.setter(
          #attachments,
          _attachments,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<_i5.Label> get labels => (super.noSuchMethod(
        Invocation.getter(#labels),
        returnValue: _FakeRxList_1<_i5.Label>(
          this,
          Invocation.getter(#labels),
        ),
      ) as _i2.RxList<_i5.Label>);

  @override
  set labels(_i2.RxList<_i5.Label>? _labels) => super.noSuchMethod(
        Invocation.setter(
          #labels,
          _labels,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<_i5.Label> get selectedLabels => (super.noSuchMethod(
        Invocation.getter(#selectedLabels),
        returnValue: _FakeRxList_1<_i5.Label>(
          this,
          Invocation.getter(#selectedLabels),
        ),
      ) as _i2.RxList<_i5.Label>);

  @override
  set selectedLabels(_i2.RxList<_i5.Label>? _selectedLabels) =>
      super.noSuchMethod(
        Invocation.setter(
          #selectedLabels,
          _selectedLabels,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get titleController => (super.noSuchMethod(
        Invocation.getter(#titleController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#titleController),
        ),
      ) as _i3.TextEditingController);

  @override
  _i3.TextEditingController get descriptionController => (super.noSuchMethod(
        Invocation.getter(#descriptionController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#descriptionController),
        ),
      ) as _i3.TextEditingController);

  @override
  _i3.TextEditingController get duedateController => (super.noSuchMethod(
        Invocation.getter(#duedateController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#duedateController),
        ),
      ) as _i3.TextEditingController);

  @override
  _i2.RxInt get boardId => (super.noSuchMethod(
        Invocation.getter(#boardId),
        returnValue: _FakeRxInt_3(
          this,
          Invocation.getter(#boardId),
        ),
      ) as _i2.RxInt);

  @override
  set boardId(_i2.RxInt? _boardId) => super.noSuchMethod(
        Invocation.setter(
          #boardId,
          _boardId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get stackId => (super.noSuchMethod(
        Invocation.getter(#stackId),
        returnValue: _FakeRxInt_3(
          this,
          Invocation.getter(#stackId),
        ),
      ) as _i2.RxInt);

  @override
  set stackId(_i2.RxInt? _stackId) => super.noSuchMethod(
        Invocation.setter(
          #stackId,
          _stackId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxInt get cardId => (super.noSuchMethod(
        Invocation.getter(#cardId),
        returnValue: _FakeRxInt_3(
          this,
          Invocation.getter(#cardId),
        ),
      ) as _i2.RxInt);

  @override
  set cardId(_i2.RxInt? _cardId) => super.noSuchMethod(
        Invocation.setter(
          #cardId,
          _cardId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_4<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_4<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> fetchCard() => (super.noSuchMethod(
        Invocation.method(
          #fetchCard,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void fetchAttachments() => super.noSuchMethod(
        Invocation.method(
          #fetchAttachments,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void fetchBoard() => super.noSuchMethod(
        Invocation.method(
          #fetchBoard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateCard(_i5.Card? card) => super.noSuchMethod(
        Invocation.method(
          #updateCard,
          [card],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addLabel(_i5.Label? label) => super.noSuchMethod(
        Invocation.method(
          #addLabel,
          [label],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeLabel(_i5.Label? label) => super.noSuchMethod(
        Invocation.method(
          #removeLabel,
          [label],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addUser(_i5.User? user) => super.noSuchMethod(
        Invocation.method(
          #addUser,
          [user],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeUser(_i5.User? user) => super.noSuchMethod(
        Invocation.method(
          #removeUser,
          [user],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addAttachment(_i7.FilePickerResult? result) => super.noSuchMethod(
        Invocation.method(
          #addAttachment,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeAttachment(_i5.Attachment? attachment) => super.noSuchMethod(
        Invocation.method(
          #removeAttachment,
          [attachment],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Disposer addListener(_i8.GetStateUpdate? listener) => (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i8.Disposer);

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i9.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Disposer addListenerId(
    Object? key,
    _i8.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i8.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}
